{
  "categories": [
    {
      "id": 1,
      "name": "Angular"
    },
    {
      "id": 2,
      "name": "JavaScript"
    }
  ],  "questions": [
    {
      "id": 1,
      "questionLabel": "What is a component in Angular?",
      "id_categorie": 1
    },
    {
      "id": 2,
      "questionLabel": "Explain the purpose of the NgModule in Angular.",
      "id_categorie": 1
    },
    {
      "id": 3,
      "questionLabel": "How do you create a new Angular application?",
      "id_categorie": 1
    },
    {
      "id": 4,
      "questionLabel": "What is data binding in Angular, and what are the different types of data binding?",
      "id_categorie": 1
    },
    {
      "id": 5,
      "questionLabel": "Explain the difference between {{}} (interpolation) and [property] (property binding) in Angular templates.",
      "id_categorie": 1
    },
    {
      "id": 6,
      "questionLabel": "What is event binding in Angular, and how is it implemented?",
      "id_categorie": 1
    },
    {
      "id": 7,
      "questionLabel": "What is Angular CLI, and how do you use it to generate components?",
      "id_categorie": 1
    },
    {
      "id": 8,
      "questionLabel": "What is a directive in Angular? Can you name some built-in directives?",
      "id_categorie": 1
    },
    {
      "id": 9,
      "questionLabel": "Explain the purpose of the Angular router and how to configure routes in an Angular application.",
      "id_categorie": 1
    },
    {
      "id": 10,
      "questionLabel": "What is dependency injection in Angular, and why is it important?",
      "id_categorie": 1
    },
    {
      "id": 11,
      "questionLabel": "What are the different data types in JavaScript?",
      "id_categorie": 2
    },
    {
      "id": 12,
      "questionLabel": "Explain the concept of closures in JavaScript.",
      "id_categorie": 2
    },
    {
      "id": 13,
      "questionLabel": "How does the 'this' keyword work in JavaScript?",
      "id_categorie": 2
    },
    {
      "id": 14,
      "questionLabel": "What is the difference between 'let', 'const', and 'var' in JavaScript?",
      "id_categorie": 2
    },
    {
      "id": 15,
      "questionLabel": "What are JavaScript promises, and how do you use them?",
      "id_categorie": 2
    },
    {
      "id": 16,
      "questionLabel": "Explain the event loop in JavaScript.",
      "id_categorie": 2
    },
    {
      "id": 17,
      "questionLabel": "What is the purpose of the 'map', 'filter', and 'reduce' methods in JavaScript?",
      "id_categorie": 2
    },
    {
      "id": 18,
      "questionLabel": "What is the difference between '==' and '===' in JavaScript?",
      "id_categorie": 2
    },
    {
      "id": 19,
      "questionLabel": "Explain asynchronous programming in JavaScript.",
      "id_categorie": 2
    },
    {
      "id": 20,
      "questionLabel": "What is a callback function in JavaScript?",
      "id_categorie": 2
    }
  ],
  "answers": [
    {
      "questionId": 1,
      "answerLabel": "A reusable building block for the user interface",
      "isCorrect": true
    },
    {
      "questionId": 1,
      "answerLabel": "A style in Angular",
      "isCorrect": false
    },
    {
      "questionId": 1,
      "answerLabel": "A service for handling HTTP requests",
      "isCorrect": false
    },
    {
      "questionId": 1,
      "answerLabel": "A routing configuration",
      "isCorrect": false
    },
    {
      "questionId": 2,
      "answerLabel": "NgModule is used to declare and configure modules in Angular applications.",
      "isCorrect": true
    },
    {
      "questionId": 2,
      "answerLabel": "NgModule is a component in Angular.",
      "isCorrect": false
    },
    {
      "questionId": 2,
      "answerLabel": "NgModule is used for data binding in Angular.",
      "isCorrect": false
    },
    {
      "questionId": 2,
      "answerLabel": "NgModule is a directive in Angular.",
      "isCorrect": false
    },
    {
      "questionId": 3,
      "answerLabel": "You can create a new Angular application using the Angular CLI by running 'ng new app-name'.",
      "isCorrect": true
    },
    {
      "questionId": 3,
      "answerLabel": "You can create a new Angular application by writing HTML and CSS files.",
      "isCorrect": false
    },
    {
      "questionId": 3,
      "answerLabel": "You can create a new Angular application using pure JavaScript.",
      "isCorrect": false
    },
    {
      "questionId": 3,
      "answerLabel": "You can create a new Angular application using Python.",
      "isCorrect": false
    },
    {
      "questionId": 4,
      "answerLabel": "Data binding in Angular is a mechanism for synchronizing data between the component and the view.",
      "isCorrect": true
    },
    {
      "questionId": 4,
      "answerLabel": "Data binding in Angular is used for creating components.",
      "isCorrect": false
    },
    {
      "questionId": 4,
      "answerLabel": "Data binding in Angular is a routing feature.",
      "isCorrect": false
    },
    {
      "questionId": 4,
      "answerLabel": "Data binding in Angular is only available for services.",
      "isCorrect": false
    },
    {
      "questionId": 5,
      "answerLabel": "{{}} (interpolation) is used for displaying dynamic data in the template.",
      "isCorrect": true
    },
    {
      "questionId": 5,
      "answerLabel": "[property] (property binding) is used for displaying dynamic data in the template.",
      "isCorrect": false
    },
    {
      "questionId": 5,
      "answerLabel": "{{}} (interpolation) is used for creating CSS styles.",
      "isCorrect": false
    },
    {
      "questionId": 5,
      "answerLabel": "[property] (property binding) is used for creating services.",
      "isCorrect": false
    },
    {
      "questionId": 6,
      "answerLabel": "Event binding in Angular is used to capture and respond to user interactions like clicks and keystrokes.",
      "isCorrect": true
    },
    {
      "questionId": 6,
      "answerLabel": "Event binding in Angular is used for defining component styles.",
      "isCorrect": false
    },
    {
      "questionId": 6,
      "answerLabel": "Event binding in Angular is used for defining routes.",
      "isCorrect": false
    },
    {
      "questionId": 6,
      "answerLabel": "Event binding in Angular is used for dependency injection.",
      "isCorrect": false
    },
    {
      "questionId": 7,
      "answerLabel": "Angular CLI (Command Line Interface) is a command-line tool for creating, building, and deploying Angular applications.",
      "isCorrect": true
    },
    {
      "questionId": 7,
      "answerLabel": "Angular CLI is a component in Angular applications.",
      "isCorrect": false
    },
    {
      "questionId": 7,
      "answerLabel": "Angular CLI is a directive in Angular applications.",
      "isCorrect": false
    },
    {
      "questionId": 7,
      "answerLabel": "Angular CLI is a service for handling HTTP requests.",
      "isCorrect": false
    },
    {
      "questionId": 8,
      "answerLabel": "A directive in Angular is a marker on a DOM element that tells Angular to do something with that element.",
      "isCorrect": true
    },
    {
      "questionId": 8,
      "answerLabel": "A directive in Angular is a component.",
      "isCorrect": false
    },
    {
      "questionId": 8,
      "answerLabel": "A directive in Angular is a service.",
      "isCorrect": false
    },
    {
      "questionId": 8,
      "answerLabel": "A directive in Angular is a module.",
      "isCorrect": false
    },
    {
      "questionId": 9,
      "answerLabel": "The Angular router is a library for navigating between views and components.",
      "isCorrect": true
    },
    {
      "questionId": 9,
      "answerLabel": "The Angular router is used for handling HTTP requests.",
      "isCorrect": false
    },
    {
      "questionId": 9,
      "answerLabel": "The Angular router is used for data binding in Angular.",
      "isCorrect": false
    },
    {
      "questionId": 9,
      "answerLabel": "The Angular router is used for event binding in Angular.",
      "isCorrect": false
    },
    {
      "questionId": 10,
      "answerLabel": "Dependency injection in Angular is a design pattern used to provide instances of classes with their dependencies.",
      "isCorrect": true
    },
    {
      "questionId": 10,
      "answerLabel": "Dependency injection in Angular is a way to inject styles into components.",
      "isCorrect": false
    },
    {
      "questionId": 10,
      "answerLabel": "Dependency injection in Angular is a way to create routes in an application.",
      "isCorrect": false
    },
    {
      "questionId": 10,
      "answerLabel": "Dependency injection in Angular is used for data binding.",
      "isCorrect": false
    },
    {
      "questionId": 11,
      "answerLabel": "Number, String, Boolean, Object, Function, Undefined, Null, Symbol",
      "isCorrect": true
    },
    {
      "questionId": 11,
      "answerLabel": "Data, List, HTML, CSS",
      "isCorrect": false
    },
    {
      "questionId": 11,
      "answerLabel": "Boolean, Undefined, Null",
      "isCorrect": false
    },
    {
      "questionId": 11,
      "answerLabel": "String, Object, Symbol, Function",
      "isCorrect": false
    },
    {
      "questionId": 12,
      "answerLabel": "A closure is a function that retains access to its lexical scope even when the function is executed outside that scope.",
      "isCorrect": true
    },
    {
      "questionId": 12,
      "answerLabel": "A closure is a new type in JavaScript.",
      "isCorrect": false
    },
    {
      "questionId": 12,
      "answerLabel": "A closure is a special kind of promise.",
      "isCorrect": false
    },
    {
      "questionId": 12,
      "answerLabel": "A closure is a function without a name.",
      "isCorrect": false
    },
    {
      "questionId": 13,
      "answerLabel": "In JavaScript, 'this' refers to the object from which the function was called.",
      "isCorrect": true
    },
    {
      "questionId": 13,
      "answerLabel": "'this' always refers to the global object.",
      "isCorrect": false
    },
    {
      "questionId": 13,
      "answerLabel": "'this' refers to the function itself.",
      "isCorrect": false
    },
    {
      "questionId": 13,
      "answerLabel": "'this' is always undefined in strict mode.",
      "isCorrect": false
    },
    {
      "questionId": 14,
      "answerLabel": "'let' and 'const' are block-scoped, while 'var' is function-scoped.",
      "isCorrect": true
    },
    {
      "questionId": 14,
      "answerLabel": "'var' and 'let' are block-scoped, 'const' is function-scoped.",
      "isCorrect": false
    },
    {
      "questionId": 14,
      "answerLabel": "'let' is block-scoped, while 'var' and 'const' are function-scoped.",
      "isCorrect": false
    },
    {
      "questionId": 14,
      "answerLabel": "All three are block-scoped.",
      "isCorrect": false
    },
    {
      "questionId": 15,
      "answerLabel": "Promises are objects representing the eventual completion or failure of an asynchronous operation.",
      "isCorrect": true
    },
    {
      "questionId": 15,
      "answerLabel": "Promises are a type of callback function.",
      "isCorrect": false
    },
    {
      "questionId": 15,
      "answerLabel": "Promises are only used for handling HTTP requests.",
      "isCorrect": false
    },
    {
      "questionId": 15,
      "answerLabel": "Promises are synchronous code blocks.",
      "isCorrect": false
    },
    {
      "questionId": 16,
      "answerLabel": "The event loop is a process that continuously checks the message queue and executes the events' callbacks.",
      "isCorrect": true
    },
    {
      "questionId": 16,
      "answerLabel": "The event loop is a method to sort arrays in JavaScript.",
      "isCorrect": false
    },
    {
      "questionId": 16,
      "answerLabel": "The event loop is a type of closure.",
      "isCorrect": false
    },
    {
      "questionId": 16,
      "answerLabel": "The event loop is used to debug JavaScript code.",
      "isCorrect": false
    },
    {
      "questionId": 17,
      "answerLabel": "'map' creates a new array, 'filter' creates a subset, and 'reduce' reduces an array to a single value.",
      "isCorrect": true
    },
    {
      "questionId": 17,
      "answerLabel": "'map' and 'filter' are the same, 'reduce' is different.",
      "isCorrect": false
    },
    {
      "questionId": 17,
      "answerLabel": "'filter' transforms data, 'map' and 'reduce' do not.",
      "isCorrect": false
    },
    {
      "questionId": 17,
      "answerLabel": "All three are used to filter elements.",
      "isCorrect": false
    },
    {
      "questionId": 18,
      "answerLabel": "'==' checks for value equality, '===' checks for both value and type equality.",
      "isCorrect": true
    },
    {
      "questionId": 18,
      "answerLabel": "'==' checks for type equality, '===' checks for value equality.",
      "isCorrect": false
    },
    {
      "questionId": 18,
      "answerLabel": "'==' and '===' are identical.",
      "isCorrect": false
    },
    {
      "questionId": 18,
      "answerLabel": "'===' checks only for type equality.",
      "isCorrect": false
    },
    {
      "questionId": 19,
      "answerLabel": "Asynchronous programming allows for non-blocking code execution.",
      "isCorrect": true
    },
    {
      "questionId": 19,
      "answerLabel": "Asynchronous programming is a way to execute code sequentially.",
      "isCorrect": false
    },
    {
      "questionId": 19,
      "answerLabel": "Asynchronous programming does not exist in JavaScript.",
      "isCorrect": false
    },
    {
      "questionId": 19,
      "answerLabel": "Asynchronous programming is used only for handling events.",
      "isCorrect": false
    },
    {
      "questionId": 20,
      "answerLabel": "A callback is a function passed into another function as an argument to be executed later.",
      "isCorrect": true
    },
    {
      "questionId": 20,
      "answerLabel": "A callback is a synchronous function.",
      "isCorrect": false
    },
    {
      "questionId": 20,
      "answerLabel": "A callback is a built-in JavaScript object.",
      "isCorrect": false
    },
    {
      "questionId": 20,
      "answerLabel": "A callback is always executed immediately.",
      "isCorrect": false
    }
  ],
  "users": [
    {
      "id": 1,
      "username": "admin",
      "password": "admin"
    },
    {
      "id": 2,
      "username": "user",
      "password": "user"
    }
  ]
}
